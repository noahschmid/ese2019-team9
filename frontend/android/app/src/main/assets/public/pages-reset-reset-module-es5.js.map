{"version":3,"sources":["./src/app/pages/reset/reset.page.html","./src/app/pages/reset/reset.module.ts","./src/app/pages/reset/reset.page.scss","./src/app/pages/reset/reset.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,y9B;;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AACF;AACU;AAEV;AACS;AACS;AAEtB;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAaF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAX3B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,gEAAY;gBACZ,yEAAe;aAClB;YACH,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;AC7B5B,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;;ACAb;AACgB;AACnB;AAC0B;AACwC;AAOjH;IAUE,mBACY,WAAwB,EACxB,WAAwB,EACxB,cAA8B,EAC9B,wBAAkD;QAHlD,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,6BAAwB,GAAxB,wBAAwB,CAA0B;QAX9D,uBAAkB,GAAG;YACnB,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,sBAAsB,EAAE;gBACrD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,oCAAoC,EAAE;aACrE;SACF,CAAC;IAOE,CAAC;IAEL,4BAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YACvC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAChE,CAAC,CAAC;IACL,CAAC;IAED,iCAAa,GAAb;QAAA,iBAmBC;QAlBC,+BAA+B;QAC/B,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YAC1B,OAAO;SACR;QAED,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,qBAAW;YACrD,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC;iBACjE,SAAS,CAAC,cAAI;gBACb,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAG;oBACxB,KAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,8BAA8B,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;oBAC5F,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBACxB;YACH,CAAC,EAAE,eAAK;gBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,KAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,iBAAiB,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;YAChF,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC;;gBA/BwB,0DAAW;gBACX,mFAAW;gBACR,8DAAc;gBACJ,2HAAwB;;IAdnD,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,6IAAgC;;SAEjC,CAAC;+EAYyB,0DAAW;YACX,mFAAW;YACR,8DAAc;YACJ,2HAAwB;OAdnD,SAAS,CA2CrB;IAAD,gBAAC;CAAA;AA3CqB","file":"pages-reset-reset-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <app-header></app-header>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-title class=\\\"pageTitle ion-no-padding\\\" >\\n          Reset your password!\\n        </ion-title>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n     <ion-col offset=\\\"4\\\" size=\\\"4\\\">\\n       <form [formGroup]=\\\"resetForm\\\" (ngSubmit)=\\\"onSubmitReset()\\\">\\n         <ion-card class=\\\"formElement\\\" >\\n           <app-input-form\\n                   [inputForm]=\\\"resetForm\\\" [givenName]=\\\"'password'\\\" [text]=\\\"'Enter new password'\\\" [validationMessages]=\\\"validationMessages.password\\\"\\n                   [type]=\\\"'password'\\\" [inputMode]=\\\"'password'\\\">\\n           </app-input-form>\\n         </ion-card>\\n         <ion-button class=\\\"formButton\\\" expand=\\\"block\\\" type=\\\"submit\\\"> Reset Password </ion-button>\\n       </form>\\n     </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport {HeaderModule} from '../../core/header.module';\nimport {InputFormModule} from '../../shared/input-form.module';\n\nimport { ResetPage } from './reset.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPage\n  }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes),\n        HeaderModule,\n        InputFormModule\n    ],\n  declarations: [ResetPage]\n})\nexport class ResetPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Jlc2V0L3Jlc2V0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, Validators, FormGroup} from '@angular/forms';\nimport {ActivatedRoute} from '@angular/router';\nimport {AuthService} from '../../core/services/authService/auth.service';\nimport {ProgressIndicatorService} from '../../core/services/progressIndicatorService/progress-indicator.service';\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.page.html',\n  styleUrls: ['./reset.page.scss'],\n})\nexport class ResetPage implements OnInit {\n\n  resetForm: FormGroup;\n  validationMessages = {\n    password: [\n      { type: 'required', message: 'Password is required' },\n      { type: 'minlength', message: 'Password must contain 6 characters' }\n    ]\n  };\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private authService: AuthService,\n      private activatedRoute: ActivatedRoute,\n      private progressIndicatorService: ProgressIndicatorService\n  ) { }\n\n  ngOnInit() {\n    this.resetForm = this.formBuilder.group( {\n      password: ['', [ Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmitReset() {\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n\n    const val = this.resetForm.value;\n    this.activatedRoute.queryParamMap.subscribe(queryParams => {\n      this.authService.resetPassword(queryParams.get('token'), val.password)\n          .subscribe(data => {\n            if (data.status === 200 ) {\n              this.progressIndicatorService.presentToast('Your password has been reset', 'success', 4000);\n              this.resetForm.reset();\n            }\n          }, error => {\n            console.log(error);\n            this.progressIndicatorService.presentToast('Invalid request', 'danger', 4000);\n          });\n    });\n  }\n}\n"],"sourceRoot":""}